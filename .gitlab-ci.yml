
default:
  image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest


stages:
  - build
  - test
  - deploy


.build_linux:
  stage: build
  before_script:
    - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git
    - conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first
  script:
    - mkdir build
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o build_tests=True $CONAN_EXTRA_ARGUMENTS ..
    - source activate.sh
    - cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWARNING_AS_ERROR=ON
                               -DBUILD_TESTS=ON ..
    - make -j4
    - source deactivate.sh
  artifacts:
    expire_in: 1 day
    paths:
      - build


# Here we have to get the binaries got with conan during build
.test_linux:
  stage: test
  variables:
    DISPLAY: ":99"
  before_script:
    - /etc/init.d/xdummy-server start
    - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git
    - conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first
  script:
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o build_tests=True $CONAN_EXTRA_ARGUMENTS ..
    - ctest --output-on-failure .


build_linux_gcc7_x86_64_debug:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .build_linux

test_linux_gcc7_x86_64_debug:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  dependencies:
    - build_linux_gcc7_x86_64_debug
  extends: .test_linux


build_linux_gcc7_x86_64_release:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Release
  extends: .build_linux

test_linux_gcc7_x86_64_release:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Release
  dependencies:
    - build_linux_gcc7_x86_64_release
  extends: .test_linux


build_linux_clang6.0_x86_64_libc++_release:
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_gui_modules
    BUILD_TYPE: Release
    CONAN_EXTRA_ARGUMENTS: -o use_conan_qt=True
  extends: .build_linux

test_linux_clang6.0_x86_64_libc++_release:
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_gui_modules
    BUILD_TYPE: Release
    CONAN_EXTRA_ARGUMENTS: -o use_conan_qt=True
  dependencies:
    - build_linux_clang6.0_x86_64_libc++_release
  extends: .test_linux


.deploy_linux_conan:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  before_script:
    - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git
    - conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first
    - conan user -p $BINTRAY_API_KEY -r scandyna scandyna
  script:
    - conan create . scandyna/testing --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE
    - conan upload MdtPlainText/* --remote scandyna --all -c


deploy_linux_gcc7_x86_64_debug:
  dependencies:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .deploy_linux_conan

deploy_linux_gcc7_x86_64_release:
  dependencies:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Release
  extends: .deploy_linux_conan

deploy_linux_gcc7_x86_64_relwithdebinfo:
  dependencies:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: RelWithDebInfo
  extends: .deploy_linux_conan



build_api_doc:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  script:
    - mkdir build
    - cd build
    - conan install ..
    - cmake -DBUILD_CPP_API_DOC=ON ..
    - doxygen
  artifacts:
    expire_in: 1 day
    paths:
      - build

pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  dependencies:
    - build_api_doc
  script:
    - mv build/doc/html public
  artifacts:
    paths:
      - public
